name: Docker

on:
  push:
    tags:
      - v*
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
          cache: "pip"

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)
      - name: Run Tests
        run: |
          coverage run --source='.' manage.py test recipes api
          coverage xml -o coverage.xml

      - name: Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v3

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs: test
    if: github.actor != 'dependabot[bot]' # skip on dependabot because it's not allowed to access secrets
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: capcom6/django-bread
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          file: package/Dockerfile
          platforms: linux/amd64
          target: prod
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    # run only in v* tags
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - build
    concurrency: production
    environment: production

    env:
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.4.6

      - name: Initialize Terraform
        working-directory: deployments/docker-swarm-terraform
        run: terraform init

      - name: Deploy Docker service to Swarm
        working-directory: deployments/docker-swarm-terraform
        env:
          CPU_LIMIT: ${{ vars.CPU_LIMIT }}
          MEMORY_LIMIT: ${{ vars.MEMORY_LIMIT }}
        run: |
          eval "$(ssh-agent -s)"
          ssh-add <(echo "${{ secrets.SSH_PRIVATE_KEY }}")
          terraform apply -auto-approve -input=false \
          -var 'swarm-manager-host=${{ secrets.SWARM_MANAGER_HOST }}' \
          -var 'app-name=${{ vars.APP_NAME }}' \
          -var "app-version=${GITHUB_REF#refs/tags/v}" \
          -var 'app-host=${{ secrets.APP_HOST }}' \
          -var 'app-dotenv-b64=${{ secrets.APP_DOTENV_B64 }}' \
          -var "cpu-limit=${CPU_LIMIT:-1000000000}" \
          -var "memory-limit=${MEMORY_LIMIT:-128000000}"
